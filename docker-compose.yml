services:
  postgres:
    platform: linux/amd64
    image: postgres:latest
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_LOCAL_PORT}:${POSTGRES_DOCKER_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    image: booking_app
    build: .
    env_file: .env
    ports:
      - "${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}"
      - "${DEBUG_PORT}:${DEBUG_PORT}"
    environment:
      SPRING_APPLICATION_JSON: '{
          "spring.datasource.url": "jdbc:postgresql://postgres:${POSTGRES_DOCKER_PORT}/${POSTGRES_DB}",
          "spring.datasource.username": "${POSTGRES_USER}",
          "spring.datasource.password": "${POSTGRES_PASSWORD}",
          "spring.jpa.properties.hibernate.dialect": "org.hibernate.dialect.PostgreSQLDialect"
        }'
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:${DEBUG_PORT}"
